---
import { getLangFromURL, useTranslations } from "../i18n/utils";
import LanguagePicker from "../components/languaguePicker.astro"
import { cleanURL } from "../i18n/utils";

const {indexSelected="0"} = Astro.props;
export const LANGUAGUE_KEY = "languague"

const lang = getLangFromURL(Astro.url)
const t = useTranslations(lang)
//Current Locale es el valor declarado en el config como idioma default
const {currentLocale} = Astro;
---
<div class="mobile-nav hide-nav">
    <button type="button" class="close-btn"><i class="fa-solid fa-xmark"></i></button>
    <ul class="items">
        <li><a class={`item${indexSelected == 0 ? ' selected' : ''}`} href={cleanURL(currentLocale,'')}>{t('nav.home')}</a></li>
            <li><a class={`item${indexSelected == 1 ? ' selected' : ''}`} href={cleanURL(currentLocale,'news')}>{t('nav.news')}</a></li>
            <li><a class={`item${indexSelected == 2 ? ' selected' : ''}`} href={cleanURL(currentLocale,'about')}>{t('nav.about')}</a></li>
            <li><a class={`item${indexSelected == 3 ? ' selected' : ''}`} href={cleanURL(currentLocale,'join_us')}>{t('nav.join_us')}</a></li>
        <LanguagePicker/>
    </ul>
</div>

<nav>
    <picture class="image-container">
        <a href={cleanURL(currentLocale,'')}><img src="/images/scp-logo.webp" alt="logo"></a>
    </picture>
    <div class="pages-container">
        <ul class="items">
            <li><a class={`item${indexSelected == 0 ? ' selected' : ''}`} href={cleanURL(currentLocale,'')}>{t('nav.home')}</a></li>
            <li><a class={`item${indexSelected == 1 ? ' selected' : ''}`} href={cleanURL(currentLocale,'news')}>{t('nav.news')}</a></li>
            <li><a class={`item${indexSelected == 2 ? ' selected' : ''}`} href={cleanURL(currentLocale,'about')}>{t('nav.about')}</a></li>
            <li><a class={`item${indexSelected == 3 ? ' selected' : ''}`} href={cleanURL(currentLocale,'join_us')}>{t('nav.join_us')}</a></li>
            <LanguagePicker/>
        </ul>
        
    </div>
    <div class="desplegable-menu-container">
        <button class="menu-btn"><i class="fa-solid fa-bars"></i></button>
    </div>
</nav>

<script>
    const btnMenu = document.querySelector('.menu-btn')
    const btnClose = document.querySelector('.close-btn')
    const mobileNav = document.querySelector('.mobile-nav')
    function toggleHideClass() {
        mobileNav.classList.toggle('hide-nav') 
        if (!mobileNav.classList.contains('hide-nav')) {
            document.body.style.overflow = 'hidden';
            document.body.style.position = 'fixed'; // Fija el body para evitar scroll
            document.body.style.width = '100%';
        } else {
            document.body.style.overflow = 'auto';
            document.body.style.position = ''; // Restablece el posicionamiento original
        }
    }
    btnClose.addEventListener('click',() => toggleHideClass())
    btnMenu.addEventListener('click',() => toggleHideClass())

</script>

<style>
    nav {
        background-color:rgba(49, 49, 49,1.5);
        display: flex;
        flex-direction: row;
        padding: 20px;
        align-items: center;
    }
    .image-container img {
        width: 100%;
        height: 100%;
    }
    .image-container {
        max-width: 15vw;
        transform: rotate(-5deg);
        height: auto;
        image-rendering: optimizeQuality;
    }

    .pages-container {
        margin-left: 5vw;
        display: flex;
        align-items: center;
    }
    .items {
        text-align: center;
        align-items: center;
        list-style: none;
        display: flex;
        flex-direction: row;
        gap: 5vw;
    }
    .desplegable-menu-container {
        display: none;
        border: 2px solid white;
        border-radius: 5px;
        margin-left: auto;
        justify-content: center;
        height: 4em;
        width: 4.5em;
    }
    .menu-btn {
        padding: 0.5vw;
        background-color: white;
        height: 100%;
        overflow: hidden;
        width: 100%;
        margin: 0;
    }
    .item {
        font-size: 2.5vw;
        text-decoration: none;
        color: white;
        font-family: "Finger Paint", sans-serif;
        font-weight: 400;
        font-style: normal;

        &:hover {
            color: red;
        }
        &.selected {
            color: red;
            text-decoration: underline;
        }
    }

    @media (width <= 850px) {
        .desplegable-menu-container {
            display: block;
        }
        .image-container {
            min-width: 45vw;
        }
        .pages-container {
            display: none;
            margin: 0;
        }
        .items {
            flex-direction: column;
            padding: 35%;
        }
        .item {
            font-size: 2rem;
            color: black;
        }
    }
    .mobile-nav {
        background-color: rgba(255,255,255,0.5);
        text-align: center;
        height: 100vh;
        width: 100vw;
        justify-content: space-between;
        position: relative;
    }
    .hide-nav {
        display: none;
    }
    .close-btn {
        margin-left: auto;
        position: absolute;
        top: 1rem;
        right: 5vw;
        background-color: white;
        border: 2px outset rgb(1,1,1);
    }
</style>